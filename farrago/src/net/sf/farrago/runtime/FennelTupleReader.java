/*
// Licensed to DynamoBI Corporation (DynamoBI) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  DynamoBI licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at

//   http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
*/
package net.sf.farrago.runtime;

import java.nio.*;


/**
 * FennelTupleReader defines an interface for unmarshalling tuples returned by
 * Fennel. Implementations are generated by FennelToIteratorConverter for
 * unmarshalling specific tuple formats.
 *
 * @author John V. Sichi
 * @version $Id$
 */
public interface FennelTupleReader
{
    //~ Methods ----------------------------------------------------------------

    /**
     * Unmarshals one tuple.
     *
     * @param byteBuffer read-only buffer containing marshalled tuple data; on
     * entry, the buffer position is at beginning of tuple
     * @param byteArray byte array underlying byteBuffer
     * @param sliceBuffer result of byteBuffer.slice(), for use in relative
     * offsets; on return, sliceBuffer position should be at the unaligned end
     * of tuple
     *
     * @return subclass-specific object containing unmarshalled tuple data
     */
    Object unmarshalTuple(
        ByteBuffer byteBuffer,
        byte [] byteArray,
        ByteBuffer sliceBuffer);
}

// End FennelTupleReader.java
