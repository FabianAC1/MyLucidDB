/*
// Licensed to DynamoBI Corporation (DynamoBI) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  DynamoBI licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at

//   http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
*/
package net.sf.farrago.runtime;

import java.nio.*;


/**
 * Sandbox for experiments in code generation.
 *
 * <p>THIS IS NOT A TEST! (Well not as such.)
 *
 * <p>This code fragments in this class serves two purposes:
 *
 * <ul>
 * <li>As an example of the code produced by a code-generator (cross-referenced
 * by javadoc comments in the code-generator); and</li>
 * <li>To help analyse the impact of changing runtime data structures. Suppose
 * we were to rename the {@link
 * FarragoRuntimeContext#newFennelTransformTupleIter} method. Then the {@link
 * #exampleFarragoTransform()} method would fail to compile. We can find the
 * generator of this code by finding all javadoc references to the {@link
 * #exampleFarragoTransform()} method.
 * </ul>
 *
 * @author Julian Hyde
 * @version $Id$
 */
public class FarragoGeneratedCodeExamples
{
    //~ Methods ----------------------------------------------------------------

    public void exampleFarragoTransform()
    {
        FarragoRuntimeContext connection = null;
        ByteBuffer outputBuffer = ByteBuffer.allocate(1);
        String farragoTransformStreamName =
            "JavaTransformExecStream global name";

        FarragoTransform.InputBinding [] inputBindings =
            new FarragoTransform.InputBinding[] {
                new FarragoTransform.InputBinding("SomeExecStream#1:100", 0),
            };

        // Constructed by JavaTransformExecStream
        FarragoTransform transform = new ExampleGeneratedFarragoTransform();

        // To initialize, JavaTransformExecStream calls:
        transform.init(connection, farragoTransformStreamName, inputBindings);

        // then to perform work it repeatedly calls:
        transform.execute(outputBuffer, 1000);
    }

    //~ Inner Classes ----------------------------------------------------------

    /**
     * ExampleGeneratedFarragoTransform an example of what a generated
     * FarragoTransform looks like. See {@link
     * FarragoGeneratedCodeExamples#exampleFarragoTransform()}.
     */
    public class ExampleGeneratedFarragoTransform
        extends FarragoTransformImpl
        implements FarragoTransform
    {
        public void init(
            FarragoRuntimeContext connection,
            String farragoTransformStreamName,
            FarragoTransform.InputBinding [] inputBindings)
        {
            super.init(
                connection,
                farragoTransformStreamName,

                // tuple writer generated by IteratorToFennelConverter
                new FennelTupleWriter() {
                    protected void marshalTupleOrThrow(
                        ByteBuffer sliceBuffer,
                        Object object)
                    {
                        // ...
                    }
                },

                // To do any actual work, this TupleIter is wrapped in
                // another TupleIter, such as a CalcTupleIter,
                // generated by one or more JavaRels.  There may be
                // multiple newFennelTransformTupleIter calls and an
                // iterator-based join here.
                connection.newFennelTransformTupleIter(
                    // tuple reader generated by FennelToIteratorConverter
                    new FennelTupleReader() {
                        public Object unmarshalTuple(
                            ByteBuffer byteBuffer,
                            byte [] byteArray,
                            ByteBuffer sliceBuffer)
                        {
                            return null;
                        }
                    },
                    farragoTransformStreamName,
                    "SomeExecStream#1:100", // the input ExecStream's name
                    inputBindings,
                    null));
        }
    }
}

// End FarragoGeneratedCodeExamples.java
