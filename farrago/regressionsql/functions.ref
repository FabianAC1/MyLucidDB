0: jdbc:farrago:> -- $Id: //open/farrago/regressionsql/functions.sql#7 $
0: jdbc:farrago:> -- Full vertical system testing of non function statements
0: jdbc:farrago:> 
0: jdbc:farrago:> -- NOTE: This script is run twice. Once with the "calcVirtualMachine" set to use fennel
0: jdbc:farrago:> -- and another time to use java. The caller of this script is setting the flag so no need
0: jdbc:farrago:> -- to do it directly unless you need to do acrobatics.
0: jdbc:farrago:> 
0: jdbc:farrago:> select pow(2.0,2.0) as exp from sales.emps where empno=100 ;
+------+
| EXP  |
+------+
| 4.0  |
+------+
0: jdbc:farrago:> select -pow(2.0,2.0) as exp from sales.emps where empno=100 ;
+-------+
|  EXP  |
+-------+
| -4.0  |
+-------+
0: jdbc:farrago:> select mod(age,9) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| 5       |
| 7       |
| 8       |
+---------+
0: jdbc:farrago:> select abs(-pow(2.0,-2.0)) as res from sales.emps where empno=100 ;
+-------+
|  RES  |
+-------+
| 0.25  |
+-------+
0: jdbc:farrago:> select ln(2.71828) as res from sales.emps where empno=100;
+--------------------+
|        RES         |
+--------------------+
| 0.999999327347282  |
+--------------------+
0: jdbc:farrago:> select log(10.0) from sales.emps;
+---------+
| EXPR$0  |
+---------+
| 1.0     |
| 1.0     |
| 1.0     |
| 1.0     |
+---------+
0: jdbc:farrago:> --select log(10) from sales.emps;
0: jdbc:farrago:> select (-empno) as res from sales.emps;
+-------+
|  RES  |
+-------+
| -100  |
| -110  |
| -120  |
| -110  |
+-------+
0: jdbc:farrago:> select (-empno)*2 as res from sales.emps;
+-------+
|  RES  |
+-------+
| -200  |
| -220  |
| -240  |
| -220  |
+-------+
0: jdbc:farrago:> select slacker and true from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| false   |
| true    |
+---------+
0: jdbc:farrago:> select slacker and false from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| false   |
| false   |
| false   |
| false   |
+---------+
0: jdbc:farrago:> select slacker and unknown from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
|         |
| false   |
+---------+
0: jdbc:farrago:> select slacker or true from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| true    |
| true    |
| true    |
| true    |
+---------+
0: jdbc:farrago:> select slacker or false from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| false   |
| true    |
+---------+
0: jdbc:farrago:> select slacker or unknown from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
|         |
| true    |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select coalesce(age,-1) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| -1      |
| 25      |
| 50      |
| 80      |
+---------+
0: jdbc:farrago:> select case slacker when true then 'yes' when false then 'no' end from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| no      |
| yes     |
+---------+
0: jdbc:farrago:> select case slacker when true then 'yes' when false then 'no' else 'null' end from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| no      |
| null    |
| null    |
| yes     |
+---------+
0: jdbc:farrago:> select nullif(name,'Wilma') from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| Eric    |
| Fred    |
| John    |
+---------+
0: jdbc:farrago:> select nullif(50,age) is null from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| false   |
| false   |
| false   |
| true    |
+---------+
0: jdbc:farrago:> select nullif(age,50) is null from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
| false   |
| false   |
| true    |
| true    |
+---------+
0: jdbc:farrago:> select nullif(50,age) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
| 50      |
| 50      |
| 50      |
+---------+
0: jdbc:farrago:> select nullif(age,50) from sales.emps order by 1;
+---------+
| EXPR$0  |
+---------+
|         |
|         |
| 25      |
| 80      |
+---------+
0: jdbc:farrago:> 
0: jdbc:farrago:> select cast(null as tinyint) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as smallint) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as integer) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as bigint) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as real) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as double) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> --select cast(null as bit) from values(1);
0: jdbc:farrago:> select cast(null as boolean) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as char) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as varchar) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as binary) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as date) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as time) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as timestamp) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> select cast(null as varbinary) from values(1);
+---------+
| EXPR$0  |
+---------+
|         |
+---------+
0: jdbc:farrago:> --select cast(null as decimal) from values(1);
0: jdbc:farrago:> 
0: jdbc:farrago:> --select abs((-empno)*2) as res from sales.emps;
0: jdbc:farrago:> --select abs(2) as res from sales.emps;
0: jdbc:farrago:> --select abs(-2) as res from sales.emps;
0: jdbc:farrago:> --select abs((-empno)*2.0) as res from sales.emps;
0: jdbc:farrago:> 
0: jdbc:farrago:> !quit
