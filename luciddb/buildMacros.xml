<?xml version="1.0" encoding="UTF-8"?>
<!-- 
// Licensed to DynamoBI Corporation (DynamoBI) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  DynamoBI licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at

//   http:www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
-->


<!DOCTYPE project [

<!ENTITY FarragoProps
"
-Dnet.sf.farrago.home=${luciddb.dir}
-Dnet.sf.farrago.catalog=${project.catalog.dir}
-Djava.util.logging.config.file=${project.trace.propfile}
${farrago.test.jvmargs}
">

<!ENTITY FarragoSqlLineProps
"
&FarragoProps;
-Dsqlline.historyFile=${sqlline.hist.file}
">

]>

<!-- Luciddb build macro definitions -->

<project name="luciddbBuildMacros" default="unspecified">
  <taskdef resource="net/sf/antcontrib/antlib.xml" />

  <!-- determine luciddb.dir based on location of this buildfile -->
  <dirname property="luciddb.dir" file="${ant.file.luciddbBuildMacros}"/>
  <property environment="env" />
  <property name="open.dir" location="${luciddb.dir}/.." />

  <!-- luciddb plugin directory -->
  <property name="luciddb.plugin.dir" location="${luciddb.dir}/plugin"/>

  <!-- directory for luciddb initialization scripts -->
  <property name="luciddb.initsql.dir" location="${luciddb.dir}/initsql" />

  <!-- filelist for farrago init scripts which are run for luciddb -->
  <filelist dir="${open.dir}/farrago/initsql" id="farrago.filelist.initsql"
    files="createStorageWrappers.sql,createReposStorageServers.sql,createSqljSchema.sql,createJdbcViews.sql,createMgmtViews.sql"/>

  <!-- Create foreign wrappers SQL file if we are doing a dev build -->
  <condition property="luciddb.createForeignWrappers.sql" 
    value="createForeignWrappers.sql" else="">
    <equals arg1="${build.mode}" arg2="developer" />
  </condition>

  <condition property="luciddb.createTestHarness.sql" 
    value="createTestHarness.sql" else="">
      <equals arg1="${build.mode}" arg2="developer"/>
  </condition>

  <condition property="luciddb.setDeviceSchedulerType.sql"
    value="setDeviceSchedulerType.sql" else="">
    <equals arg1="${os.name}" arg2="Linux"/>
  </condition>

  <!-- filelist for luciddb init scripts -->
  <filelist dir="${luciddb.initsql.dir}" id="luciddb.filelist.initsql"
    files="${luciddb.setDeviceSchedulerType.sql} installApplib.sql ${luciddb.createTestHarness.sql} createDbaViews.sql ${luciddb.createForeignWrappers.sql}"/>


  <!-- Macro to run sql scripts/tests using LucidDbSqlTest -->
  <macrodef name="luciddb.runSqlTests">
    <attribute name="filelist" default="unspecified"/>
    <attribute name="sqltest.classpath" default="unspecified"/>
    <sequential>
      <junit printsummary="yes" fork="yes" haltonerror="yes" 
        haltonfailure="yes" tempdir="${testlog.dir}">
        <classpath path="@{sqltest.classpath}"/>
        <jvmarg line="-Xmx512m -Xms512m" />
        <jvmarg line="${assertions.jvmarg}"/>
        <jvmarg line="&FarragoSqlLineProps;"/>
        <sysproperty key="net.sf.farrago.fileset.unitsql"
          value="@{filelist}"/>
        <formatter type="plain"/>
        <formatter type="xml"/> <!-- for integration builds -->
        <test todir="${testlog.dir}"
          name="com.lucidera.luciddb.test.LucidDbSqlTest" />
      </junit>
    </sequential>
  </macrodef>

</project>
